#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include <iomanip>
#include <math.h>
#include <map>
#include <algorithm>

#define MAX 100
using namespace std;

std::ifstream input("input.txt");
std::ofstream output("output.txt");

int n;
map<int, int> m;
int a[MAX];
int length = 0;


void swap(int& x, int& y) {
    int temp = x;
    x = y;
    y = temp;
}


int partition(int start, int end) {
    int pivot_value = a[end];


    int i_small = start-1;
    for(int i = start; i < end; i++) {
        if(m[a[i]] > m[pivot_value]) {
            swap(a[++i_small], a[i]);
        }
        else if(m[a[i]] == m[pivot_value] && a[i] < pivot_value) {
            swap(a[++i_small], a[i]);
        }
    }

    swap(a[i_small+1], a[end]);
    
    return i_small+1;
}


void quick_sort(int start, int end) { // index a[start], a[end]
    if(start > end) {
        return;
    }


    int pivot = partition(start, end);
    quick_sort(start, pivot-1);
    quick_sort(pivot+1, end);
}


int main() {
    input >> n;
    int x;
    for(int i = 1; i <= n; i++) {
        input >> x;
        if (m.count(x) == 0) m[x] = 1;
        else m[x]++;
    }


    for(const auto& pair : m) {
        int key = pair.first;
        a[length++] = key;
    }
   
    quick_sort(0, length-1); // O(n logn)
   
    for(int i = 0; i < length; i++) {
        for(int j = 0; j < m[a[i]]; j++)
            std::cout << a[i] << " ";
    }
}