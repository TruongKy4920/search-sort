#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include <iomanip>
#include <math.h>
#include <algorithm>

#define MAX 100
using namespace std;

std::ifstream input("input.txt");
std::ofstream output("output.txt");

int n, x;
int a_origin[MAX];
int a[MAX];


void print() {
    for(int i = 1; i <= n; i++) {
        std::cout << a_origin[i] << " ";
    }
    std::cout << "\n";
}


void swap(int& x, int& y) {
    int temp = x;
    x = y;
    y = temp;
}


int partition(int start, int end) {
    int pivot_value = a[end];


    int i_small = start-1;
    for(int i = start; i < end; i++) {
        if(a[i] < pivot_value) {
            i_small++;
            swap(a[i_small], a[i]);
            swap(a_origin[i_small], a_origin[i]);
        }
    }
   
    swap(a[i_small+1], a[end]);
    swap(a_origin[i_small+1], a_origin[end]);
    return i_small+1;
}


void quick_sort(int start, int end) { // index a[start], a[end]
    if(start > end) {
        return;
    }


    int pivot = partition(start, end);
    quick_sort(start, pivot-1);
    quick_sort(pivot+1, end);
}


int main() {
    std::cin >> n >> x;
    for(int i = 1; i <= n; i++) {
        std::cin >> a_origin[i];
        a[i] = abs(x - a_origin[i]);
    }


    quick_sort(1, n);
   
    print();
}
